Migrations komutları

dotnet ef migrations add AddDirectorTable : yeni migration oluşturur.

dotnet ef database update : oluşturulan migrationları veritabanına uygular.f

dotnet ef database update RemoveDirectorProperty : veritabanını ilgli migrationa günceller.

dotnet ef migrations remove : son eklenen migrations'u projeden kaldırır.(Eğer bu uygulanmış migration ise hata verecektir.)

NOT: Bu gibi veritabanı işlemlerini yapmadan önce projeyi derleyi hata olmadığından, doğru projenin seçili olduğundan ve komut satırının proje yolunun doğruluğundan emin olmamız gerekiyor.


Bazı Kavramlar:
1) Data Annotations: 
	    [Required]
        public string Title { get; set; }
        [MaxLength(500)]
        public string Description { get; set; }
Şeklinde veri  tabanı oluşturuken yazdığımız propların üzerinde girilen parametrelere denir.

2) Fluent Api:
    DbContext sınıfı içinde ilgili modeli override edilerek yapılır.

3)Navigation Property:
    Navigation Property'nin Amacı
    Navigation property'ler, veritabanındaki ilişkisel verilerin .NET Core uygulamanızda nesne referansları üzerinden kolayca erişilmesini sağlar. Örneğin, Customer ve Order adında iki varlığınız olduğunu düşünelim; bir müşteri birden fazla siparişe sahip olabilir. Bu durumda, Customer sınıfında Orders adında bir navigation property, Order sınıfında ise Customer adında bir navigation property olabilir. Bu sayede, bir müşterinin tüm siparişlerini veya bir siparişin ait olduğu müşteriyi kolayca çekebilirsiniz.

Not:appsettings.json a eklediğimiz "Microsoft.EntityFrameworkCore.Database.Command": "Information" satırı ile projeden veritabanına atılan linq sorgularını konsolda (output) gördük.